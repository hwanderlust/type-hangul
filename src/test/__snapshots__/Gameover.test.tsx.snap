// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Gameover/> renders correctly 1`] = `
.c2 {
  display: block;
}

.c4 {
  height: 100px;
  -webkit-transform: translateY(-10%);
  -ms-transform: translateY(-10%);
  transform: translateY(-10%);
}

.c6 {
  width: 100px;
  height: 100px;
  background: transparent;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  -webkit-filter: drop-shadow(1px 0 10px #000);
  filter: drop-shadow(1px 0 10px #000);
}

.c6:focus {
  border: 1px solid white;
  outline: none;
}

.c7 {
  width: 100%;
  height: 100%;
}

.c1 {
  position: absolute;
  top: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  width: 95vw;
}

.c3 {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c5 {
  display: block;
  position: absolute;
  right: 1vw;
  top: calc(50% - 50px);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 100vh;
  font-family: 'Playfair Display',serif;
}

.c8 {
  border: 1px solid black;
  width: calc(250px + (500 - 250) * ((100vw - 300px) / (1440 - 300)));
  padding: 2rem;
  margin-bottom: 2rem;
  box-sizing: border-box;
}

.c8:last-of-type {
  margin-bottom: 0;
}

.c11 {
  -webkit-animation: hUniol 2s ease;
  animation: hUniol 2s ease;
}

.c9 {
  margin-top: 0;
}

.c14 {
  border: none;
  background-color: black;
  color: white;
  padding: 1rem 3rem;
  font-family: 'Nanum Pen Script',cursive;
  font-size: calc(24px + (36 - 24) * ((100vw - 300px) / (1440 - 300)));
}

.c14:focus,
.c14:hover {
  background-color: transparent;
  color: black;
  border: 1px solid white;
  -webkit-transition: all 150ms ease-out;
  transition: all 150ms ease-out;
}

.c13 {
  margin-top: 0;
  font-size: calc(12px + (16 - 12) * ((100vw - 300px) / (1440 - 300)));
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  display: inline-block;
  margin-right: 8vmin;
  margin-top: 0;
  margin-bottom: 0;
  font-size: calc(24px + (36 - 24) * ((100vw - 300px) / (1440 - 300)));
}

@media only screen and (max-width:720px) {
  .c4 {
    height: 50px;
    -webkit-transform: translateY(-25%);
    -ms-transform: translateY(-25%);
    transform: translateY(-25%);
  }
}

@media only screen and (max-width:720px) {
  .c6 {
    width: 50px;
    height: 50px;
  }
}

<div
  className="c0"
>
  <header
    className="c1"
  >
    <a
      className="c2 c3"
      href="/"
      onClick={[Function]}
    >
      <img
        alt="a 'T' with the Korean ㅎ as a logo"
        className="c4"
        src="logo.png"
      />
    </a>
  </header>
  <div
    className="c5"
  >
    <button
      className="c6"
      onClick={[Function]}
    >
      <img
        alt="Kakao Friends' Apeach smiling - as a menu icon/button"
        className="c7"
        src="apeach-btn.png"
      />
    </button>
  </div>
  <div
    className="c8"
  >
    <h1
      className="c9"
    >
      Game Over
    </h1>
    <h2
      className="c10"
    >
      Your score
    </h2>
    <span>
      0
    </span>
  </div>
  <div
    className="c8 c11"
  >
    <div
      className="c12"
    >
      <h3
        className="c13"
      >
        Try Again
      </h3>
      <button
        className="c14"
        id="tryAgain"
        onClick={[Function]}
      >
        다시 해봐
      </button>
    </div>
  </div>
</div>
`;
